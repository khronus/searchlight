{
  "check_command": [
    {
      "description": "This is used to check Kubernetes components",
      "examples": "hyperalert check_component_status",
      "name": "component_status",
      "envs": [
        "onebox",
        "prod",
        "qa",
        "dev"
      ],
      "vars": [
        {
          "description": "Selector (label query) to filter on, supports '=', '==', and '!='.",
          "flag": {
            "short": "l",
            "long": "selector"
          },
          "name": "selector",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        },
        {
          "description": "Name of component whose status is checked",
          "flag": {
            "long": "componentName"
          },
          "name": "componentName",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        }
      ],
       "states": [
         "OK",
         "Critical",
         "Unknown"
       ]
     },
    {
      "description": "This is used to check any API response parsing JSON using JQ queries",
      "examples": "hyperalert check_json_path --url='https://api.appscode.com/health' --query='.status' --critical='.status != \"OK\"'",
      "name": "json_path",
      "envs": [
        "onebox",
        "prod",
        "qa",
        "dev"
      ],
      "vars": [
        {
          "description": "URL to get data",
          "flag": {
            "short": "u",
            "long": "url"
          },
          "name": "url",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        },
        {
          "description": "Kubernetes secret name",
          "flag": {
            "short": "s",
            "long": "secretName"
          },
          "name": "secretName",
          "type": "STRING",
          "parameterized": false,
          "visibility": false,
          "optional": true
        },
        {
          "description": "Use InClusterConfig",
          "flag": {
            "long": "inClusterConfig"
          },
          "name": "inClusterConfig",
          "parameterized": false,
          "visibility": false,
          "optional": true
        },
        {
          "description": "Warning JQ query which returns [true/false]",
          "flag": {
            "short": "w",
            "long": "warning"
          },
          "name": "warning",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        },
        {
          "description": "Critical JQ query which returns [true/false]",
          "flag": {
            "short": "c",
            "long": "critical"
          },
          "name": "critical",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": false
        }
      ],
      "states": [
        "OK",
        "Warning",
        "Critical",
        "Unknown"
      ]
    },
    {
      "description": "This is used to check total number of Kubernetes node",
      "examples": "hyperalert check_node_exists --count=3",
      "name": "node_exists",
      "envs": [
        "onebox",
        "prod",
        "qa",
        "dev"
      ],
      "vars": [
        {
          "description": "Number of expected Kubernetes Node",
          "flag": {
            "short": "c",
            "long": "count"
          },
          "name": "count",
          "type": "INTEGER",
          "parameterized": false,
          "visibility": true,
          "optional": false
        },
        {
          "description": "Selector (label query) to filter on, supports '=', '==', and '!='.",
          "flag": {
            "short": "l",
            "long": "selector"
          },
          "name": "selector",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        },
        {
          "description": "Name of node whose existence is checked",
          "flag": {
            "short": "n",
            "long": "nodeName"
          },
          "name": "nodeName",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        }
      ],
      "states": [
        "OK",
        "Critical",
        "Unknown"
      ]
    },
    {
      "description": "This is used to check Kubernetes pod existence",
      "name": "pod_exists",
      "envs": [
        "onebox",
        "prod",
        "qa",
        "dev"
      ],
      "vars": [
        {
          "description": "Number of expected Kubernetes Pod",
          "flag": {
            "short": "c",
            "long": "count"
          },
          "name": "count",
          "type": "INTEGER",
          "parameterized": false,
          "visibility": true,
          "optional": true
        },
        {
          "description": "Selector (label query) to filter on, supports '=', '==', and '!='.",
          "flag": {
            "short": "l",
            "long": "selector"
          },
          "name": "selector",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        },
        {
          "description": "Name of pod whose existence is checked",
          "flag": {
            "short": "p",
            "long": "podName"
          },
          "name": "podName",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        }
      ],
      "states": [
        "OK",
        "Critical",
        "Unknown"
      ]
    },
    {
      "description": "This is used to check Kubernetes events. This plugin checks for all Warning events happened in last 'c' seconds. Icinga check_interval is provided as 'c'.",
      "name": "event",
      "envs": [
        "onebox",
        "prod",
        "qa",
        "dev"
      ],
      "vars": [
        {
          "description": "Clock skew in Duration. [Default: 30s]. This time is added with check_interval while checking events",
          "flag": {
            "short": "s",
            "long": "clockSkew"
          },
          "name": "clockSkew",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        },
        {
          "description": "Name of object involved in an event",
          "flag": {
            "long": "involvedObjectName"
          },
          "name": "involvedObjectName",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        },
        {
          "description": "Namespace of object involved in an event",
          "flag": {
            "long": "involvedObjectNamespace"
          },
          "name": "involvedObjectNamespace",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        },
        {
          "description": "Kind of object involved in an event",
          "flag": {
            "long": "involvedObjectKind"
          },
          "name": "involvedObjectKind",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        },
        {
          "description": "UID of object involved in an event",
          "flag": {
            "long": "involvedObjectUID"
          },
          "name": "involvedObjectUID",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        }
      ],
      "states": [
        "OK",
        "Warning",
        "Unknown"
      ]
    },
    {
      "description": "This is used to check Kubernetes api server CA Certificate expiration date",
      "examples": "hyperalert check_ca_cert",
      "name": "ca_cert",
      "envs": [
        "onebox",
        "prod",
        "qa",
        "dev"
      ],
      "vars": [
        {
          "description": "Warning level value (usage duration defaults to 360h)",
          "flag": {
            "short": "w",
            "long": "warning"
          },
          "name": "warning",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        },
        {
          "description": "Critical level value (usage duration defaults to 120h)",
          "flag": {
            "short": "c",
            "long": "critical"
          },
          "name": "critical",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        }
      ],
      "states": [
        "OK",
        "Warning",
        "Critical",
        "Unknown"
      ]
    },
    {
      "description": "This is used to test various stuff",
      "name": "env",
      "envs": [
        "onebox",
        "prod",
        "qa",
        "dev"
      ],
      "states": [
        "OK",
        "Warning",
        "Critical",
        "Unknown"
      ]
    },
    {
      "description": "This is used to check Certificate expiration date using Secret",
      "examples": "hyperalert check_cert",
      "name": "cert",
      "envs": [
        "onebox",
        "prod",
        "qa",
        "dev"
      ],
      "vars": [
        {
          "description": "Selector (label query) to filter on, supports '=', '==', and '!='.",
          "flag": {
            "short": "l",
            "long": "selector"
          },
          "name": "selector",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        },
        {
          "description": "Name of the Secret where certificate is stored",
          "flag": {
            "short": "s",
            "long": "secretName"
          },
          "name": "secretName",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        },
        {
          "description": "Comma separated Secret keys",
          "flag": {
            "short": "k",
            "long": "secretKey"
          },
          "name": "secretKey",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        },
        {
          "description": "Warning level value (usage duration defaults to 360h)",
          "flag": {
            "short": "w",
            "long": "warning"
          },
          "name": "warning",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        },
        {
          "description": "Critical level value (usage duration defaults to 120h)",
          "flag": {
            "short": "c",
            "long": "critical"
          },
          "name": "critical",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        }
      ],
      "states": [
        "OK",
        "Warning",
        "Critical",
        "Unknown"
      ]
    },
    {
      "description": "This is used to test various stuff",
      "name": "env",
      "envs": [
        "onebox",
        "prod",
        "qa",
        "dev"
      ],
      "states": [
        "OK",
        "Warning",
        "Critical",
        "Unknown"
      ]
    },
    {
      "description": "The [check_dummy](https://www.monitoring-plugins.org/doc/man/check_dummy.html) plugin will simply return the state corresponding to the numeric value of the `dummy_state` argument with optional text.",
      "name": "dummy",
      "envs": [
        "onebox",
        "prod",
        "qa",
        "dev"
      ],
      "vars": [
        {
          "description": "The state. Can be one of 0 (ok), 1 (warning), 2 (critical) and 3 (unknown). Defaults to 0.",
          "name": "dummy_state",
          "optional": true
        },
        {
          "description": "Plugin output. Defaults to \"Check was successful.\".",
          "name": "dummy_text",
          "optional": true
        }
      ]
    },
    {
      "description": "Modified check_command [http] where user can provide custom http_address",
      "name": "any_http",
      "envs": [
        "onebox",
        "prod",
        "qa",
        "dev"
      ],
      "vars": [
        {
          "description": "The host's address. Default empty",
          "name": "httpAddress",
          "type": "STRING",
          "optional": true
        },
        {
          "description": "The virtual host that should be sent in the \"Host\" header.",
          "name": "httpVhost",
          "type": "STRING",
          "optional": true
        },
        {
          "description": "The request URI for GET or POST. Defaults to `/`.",
          "name": "httpURI",
          "type": "STRING",
          "optional": true
        },
        {
          "description": "The TCP port. Defaults to 80 when not using SSL, 443 otherwise.",
          "flag": {
            "long": "port",
            "short": "p"
          },
          "name": "httpPort",
          "optional": true,
          "type": "INTEGER"
        },
        {
          "description": "Whether to use SSL. Defaults to false.",
          "flag": {
            "long": "ssl",
            "short": "S"
          },
          "name": "httpSSL",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Whether to force TLSv1.",
          "flag": {
            "long": "ssl",
            "short": "S"
          },
          "name": "httpSSLForceTLSv1",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Whether to force TLSv1.1.",
          "flag": {
            "long": "ssl",
            "short": "S"
          },
          "name": "httpSSLForceTLSv1_1",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Whether to force TLSv1.2.",
          "flag": {
            "long": "ssl",
            "short": "S"
          },
          "name": "httpSSLForceTLSv1_2",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Whether to force SSLv2.",
          "flag": {
            "long": "ssl",
            "short": "S"
          },
          "name": "httpSSLForceSSLv2",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Whether to force SSLv3.",
          "flag": {
            "long": "ssl",
            "short": "S"
          },
          "name": "httpSSLForceSSLv3",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Whether to force TLSv1 or higher.",
          "flag": {
            "long": "ssl",
            "short": "S"
          },
          "name": "httpSSLForceTLSv1_or_higher",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Whether to force TLSv1.1 or higher.",
          "flag": {
            "long": "ssl",
            "short": "S"
          },
          "name": "httpSSLForceTLSv1_1_or_higher",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Whether to force TLSv1.2 or higher.",
          "flag": {
            "long": "ssl",
            "short": "S"
          },
          "name": "httpSSLForceTLSv1_2_or_higher",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Whether to force SSLv2 or higher.",
          "flag": {
            "long": "ssl",
            "short": "S"
          },
          "name": "httpSSLForceSSLv2_or_higher",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Whether to force SSLv3 or higher.",
          "flag": {
            "long": "ssl",
            "short": "S"
          },
          "name": "httpSSLForceSSLv3_or_higher",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Whether to use SNI. Defaults to false.",
          "name": "httpSNI",
          "optional": true
        },
        {
          "description": "Add 'username:password' authorization pair.",
          "name": "httpAuthPair",
          "optional": true
        },
        {
          "description": "Add 'username:password' authorization pair for proxy.",
          "name": "httpProxyAuthPair",
          "optional": true
        },
        {
          "description": "Don't download the body, just the headers.",
          "name": "httpIgnoreBody",
          "optional": true
        },
        {
          "description": "Allow regex to span newline.",
          "name": "httpLinespan",
          "optional": true
        },
        {
          "description": "A regular expression which the body must match against. Incompatible with httpIgnoreBody.",
          "flag": {
            "long": "expect",
            "short": "e"
          },
          "name": "httpExpectBodyRegex",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "A case-insensitive expression which the body must match against. Incompatible with httpIgnoreBody.",
          "flag": {
            "long": "eregi",
            "short": "R"
          },
          "name": "httpExpectBodyEregi",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Changes behaviour of httpExpectBodyRegex and httpExpectBodyEregi to return Critical if found, OK if not.",
          "name": "httpInvertregex",
          "optional": true
        },
        {
          "description": "The warning threshold.",
          "name": "httpWarnTime",
          "optional": true
        },
        {
          "description": "The critical threshold.",
          "flag": {
            "long": "critical",
            "short": "c"
          },
          "name": "httpCriticalTime",
          "optional": true,
          "type": "DOUBLE"
        },
        {
          "description": "Comma-delimited list of strings, at least one of them is expected in the first (status) line of the server response. Default: HTTP/1.",
          "flag": {
            "long": "expect",
            "short": "e"
          },
          "name": "httpExpect",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Minimum number of days a certificate has to be valid. This parameter explicitely sets the port to 443 and ignores the URL if passed.",
          "flag": {
            "long": "certificate",
            "short": "C"
          },
          "name": "httpCertificate",
          "optional": true,
          "type": "INTEGER"
        },
        {
          "description": "Name of file contains the client certificate (PEM format).",
          "flag": {
            "long": "client-cert",
            "short": "J"
          },
          "name": "httpClientcert",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Name of file contains the private key (PEM format).",
          "flag": {
            "long": "private-key",
            "short": "K"
          },
          "name": "httpPrivatekey",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "String to expect in the response headers.",
          "flag": {
            "long": "header",
            "short": "k"
          },
          "name": "httpHeaderstring",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "String to expect in the content.",
          "flag": {
            "long": "string",
            "short": "s"
          },
          "name": "httpString",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "URL encoded http POST data.",
          "flag": {
            "long": "post",
            "short": "P"
          },
          "name": "httpPost",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Set http method (for example: HEAD, OPTIONS, TRACE, PUT, DELETE).",
          "flag": {
            "long": "method",
            "short": "j"
          },
          "name": "httpMethod",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Warn if document is more than seconds old.",
          "flag": {
            "long": "max-age",
            "short": "M"
          },
          "name": "httpMaxage",
          "optional": true,
          "type": "INTEGER"
        },
        {
          "description": "Specify Content-Type header when POSTing.",
          "flag": {
            "long": "content-type",
            "short": "T"
          },
          "name": "httpContenttype",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "String to be sent in http header as User Agent.",
          "flag": {
            "long": "useragent",
            "short": "A"
          },
          "name": "httpUseragent",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Any other tags to be sent in http header.",
          "flag": {
            "long": "header",
            "short": "k"
          },
          "name": "httpHeader",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Print additional perfdata. Defaults to false.",
          "name": "httpExtendedperfdata",
          "optional": true
        },
        {
          "description": "How to handle redirect pages. Possible values: \"ok\" (default), \"warning\", \"critical\", \"follow\", \"sticky\" (like follow but stick to address), \"stickyport\" (like sticky but also to port)",
          "flag": {
            "long": "onredirect",
            "short": "f"
          },
          "format": "enum",
          "name": "httpOnredirect",
          "optional": true,
          "type": "STRING",
          "values": [
            "ok",
            "warning",
            "critical",
            "follow",
            "sticky",
            "stickyport"
          ]
        },
        {
          "description": "Minimum page size required:Maximum page size required.",
          "flag": {
            "long": "pagesize",
            "short": "m"
          },
          "name": "httpPagesize",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Seconds before connection times out.",
          "flag": {
            "long": "timeout",
            "short": "t"
          },
          "name": "httpTimeout",
          "optional": true,
          "type": "INTEGER"
        },
        {
          "description": "Use IPv4 connection. Defaults to false.",
          "name": "httpIPv4",
          "optional": true
        },
        {
          "description": "Use IPv6 connection. Defaults to false.",
          "name": "httpIPv6",
          "optional": true
        }
      ]
    }
  ]
}
