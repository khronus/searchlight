{
  "check_command": [
    {
      "description": "This is used to check Kubernetes components",
      "examples": "hyperalert check_component_status",
      "name": "component_status",
      "envs": [
        "onebox",
        "prod",
        "qa",
        "dev"
      ],
       "states": [
         "OK",
         "CRITICAL",
         "UNKNOWN"
       ]
     },
    {
      "description": "This is used to check InfluxDB query result",
      "name": "influx_query",
      "envs": [
        "onebox",
        "prod",
        "qa",
        "dev"
      ],
      "vars": [
        {
          "description": "URL of InfluxDB host to query",
          "flag": {
            "short": "h",
            "long": "influx_host"
          },
          "name": "influx_host",
          "type": "STRING",
          "parameterized": false,
          "visibility": false,
          "optional": true
        },
        {
          "description": "Kubernetes secret name",
          "flag": {
            "short": "s",
            "long": "secret"
          },
          "name": "secret",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": false
        },
        {
          "description": "InfluxDB query (A). Query result will be assigned to variable (A)",
          "flag": {
            "long": "A"
          },
          "name": "A",
          "type": "STRING",
          "parameterized": true,
          "visibility": true,
          "optional": false
        },
        {
          "description": "InfluxDB query (B). Query result will be assigned to variable (B)",
          "flag": {
            "long": "B"
          },
          "name": "B",
          "type": "STRING",
          "parameterized": true,
          "visibility": false,
          "optional": true
        },
        {
          "description": "InfluxDB query (C). Query result will be assigned to variable (C)",
          "flag": {
            "long": "C"
          },
          "name": "C",
          "type": "STRING",
          "parameterized": true,
          "visibility": false,
          "optional": true
        },
        {
          "description": "InfluxDB query (D). Query result will be assigned to variable (D)",
          "flag": {
            "long": "D"
          },
          "name": "D",
          "type": "STRING",
          "parameterized": true,
          "visibility": false,
          "optional": true
        },
        {
          "description": "InfluxDB query (E). Query result will be assigned to variable (E)",
          "flag": {
            "long": "E"
          },
          "name": "E",
          "type": "STRING",
          "parameterized": true,
          "visibility": false,
          "optional": true
        },
        {
          "description": "Equation [A+B] to get result from queries. Result will be assigned to variable (R)",
          "flag": {
            "long": "R"
          },
          "name": "R",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": false
        },
        {
          "description": "Condition for warning, compare with result. (Example: R > 75)",
          "flag": {
            "short": "w",
            "long": "warning"
          },
          "name": "warning",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        },
        {
          "description": "Condition for critical, compare with result. (Example: R > 90)",
          "flag": {
            "short": "c",
            "long": "critical"
          },
          "name": "critical",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": false
        }
      ],
      "states": [
      "OK",
      "WARNING",
      "CRITICAL",
      "UNKNOWN"
    ]
    },
    {
      "description": "This is used to check any API response parsing JSON using JQ queries",
      "examples": "hyperalert check_json_path --url='https://api.appscode.com/health' --query='.status' --critical='.status != \"OK\"'",
      "name": "json_path",
      "envs": [
        "onebox",
        "prod",
        "qa",
        "dev"
      ],
      "vars": [
        {
          "description": "URL to get data",
          "flag": {
            "short": "u",
            "long": "url"
          },
          "name": "url",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": false
        },
        {
          "description": "JQ query",
          "flag": {
            "short": "q",
            "long": "query"
          },
          "name": "query",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": false
        },
        {
          "description": "Kubernetes secret name",
          "flag": {
            "short": "s",
            "long": "secret"
          },
          "name": "secret",
          "type": "STRING",
          "parameterized": false,
          "visibility": false,
          "optional": true
        },
        {
          "description": "Use InClusterConfig",
          "flag": {
            "long": "in_cluster_config"
          },
          "name": "in_cluster_config",
          "parameterized": false,
          "visibility": false,
          "optional": true
        },
        {
          "description": "Warning JQ query which returns [true/false]",
          "flag": {
            "short": "w",
            "long": "warning"
          },
          "name": "warning",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        },
        {
          "description": "Critical JQ query which returns [true/false]",
          "flag": {
            "short": "c",
            "long": "critical"
          },
          "name": "critical",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": false
        }
      ],
      "states": [
        "OK",
        "WARNING",
        "CRITICAL",
        "UNKNOWN"
      ]
    },
    {
      "description": "This is used to check total number of Kubernetes node",
      "examples": "hyperalert check_node_exists --count=3",
      "name": "node_exists",
      "envs": [
        "onebox",
        "prod",
        "qa",
        "dev"
      ],
      "vars": [
        {
          "description": "Number of expected Kubernetes Node",
          "flag": {
            "short": "c",
            "long": "count"
          },
          "name": "count",
          "type": "INTEGER",
          "parameterized": false,
          "visibility": true,
          "optional": false
        },
        {
          "description": "Selector (label query) to filter on, supports '=', '==', and '!='.",
          "flag": {
            "short": "l",
            "long": "selector"
          },
          "name": "selector",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        },
        {
          "description": "Name of node whose existence is checked",
          "flag": {
            "short": "n",
            "long": "nodename"
          },
          "name": "nodename",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        }
      ],
      "states": [
        "OK",
        "CRITICAL",
        "UNKNOWN"
      ]
    },
    {
      "description": "This is used to check Kubernetes Node status",
      "examples": "hyperalert check_node_status --name=master.internal",
      "name": "node_status",
      "envs": [
        "onebox",
        "prod",
        "qa",
        "dev"
      ],
      "states": [
        "OK",
        "CRITICAL",
        "UNKNOWN"
      ]
    },
    {
      "description": "This is used to check Kubernetes pod existence",
      "name": "pod_exists",
      "envs": [
        "onebox",
        "prod",
        "qa",
        "dev"
      ],
      "vars": [
        {
          "description": "Number of expected Kubernetes Pod",
          "flag": {
            "short": "c",
            "long": "count"
          },
          "name": "count",
          "type": "INTEGER",
          "parameterized": false,
          "visibility": true,
          "optional": true
        },
        {
          "description": "Selector (label query) to filter on, supports '=', '==', and '!='.",
          "flag": {
            "short": "l",
            "long": "selector"
          },
          "name": "selector",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        },
        {
          "description": "Name of pod whose existence is checked",
          "flag": {
            "short": "p",
            "long": "pod_name"
          },
          "name": "pod_name",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        }
      ],
      "states": [
        "OK",
        "CRITICAL",
        "UNKNOWN"
      ]
    },
    {
      "description": "This is used to check Kubernetes pod status",
      "name": "pod_status",
      "envs": [
        "onebox",
        "prod",
        "qa",
        "dev"
      ],
      "states": [
        "OK",
        "CRITICAL",
        "UNKNOWN"
      ]
    },
    {
      "description": "This is used to check Node Disk stat.",
      "name": "node_volume",
      "envs": [
        "onebox",
        "prod",
        "qa",
        "dev"
      ],
      "vars": [
        {
          "description": "Kubernetes secret name",
          "flag": {
            "short": "s",
            "long": "secret"
          },
          "name": "secret",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        },
        {
          "description": "Warning level value (usage percentage defaults to 75.0)",
          "flag": {
            "short": "w",
            "long": "warning"
          },
          "name": "warning",
          "type": "INTERGER",
          "parameterized": false,
          "visibility": true,
          "optional": true
        },
        {
          "description": "Critical level value (usage percentage defaults to 90.0)",
          "flag": {
            "short": "c",
            "long": "critical"
          },
          "name": "critical",
          "type": "INTERGER",
          "parameterized": false,
          "visibility": true,
          "optional": true
        }
      ],
      "states": [
        "OK",
        "CRITICAL",
        "UNKNOWN"
      ]
    },
    {
      "description": "This is used to check Pod volume stat.",
      "name": "volume",
      "envs": [
        "onebox",
        "prod",
        "qa",
        "dev"
      ],
      "vars": [
        {
          "description": "Kubernetes secret name",
          "flag": {
            "short": "s",
            "long": "secret"
          },
          "name": "secret",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        },
        {
          "description": "Volume name",
          "flag": {
            "short": "N",
            "long": "volume_name"
          },
          "name": "volume_name",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        },
        {
          "description": "Warning level value (usage percentage defaults to 75.0)",
          "flag": {
            "short": "w",
            "long": "warning"
          },
          "name": "warning",
          "type": "INTERGER",
          "parameterized": false,
          "visibility": true,
          "optional": true
        },
        {
          "description": "Critical level value (usage percentage defaults to 90.0)",
          "flag": {
            "short": "c",
            "long": "critical"
          },
          "name": "critical",
          "type": "INTERGER",
          "parameterized": false,
          "visibility": true,
          "optional": true
        }
      ],
      "states": [
        "OK",
        "CRITICAL",
        "UNKNOWN"
      ]
    },
    {
      "description": "This is used to check Kubernetes events. This plugin checks for all Warning events happened in last 'c' seconds. Icinga check_interval is provided as 'c'.",
      "name": "kube_event",
      "envs": [
        "onebox",
        "prod",
        "qa",
        "dev"
      ],
      "vars": [
        {
          "description": "Clock skew in Duration. [Default: 30s]. This time is added with check_interval while checking events",
          "flag": {
            "short": "s",
            "long": "clock_skew"
          },
          "name": "clock_skew",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        }
      ],
      "states": [
        "OK",
        "WARNING",
        "UNKNOWN"
      ]
    },
    {
      "description": "This is used to check Kubernetes exec command. Returns OK if exit code is zero, otherwise, returns CRITICAL",
      "name": "kube_exec",
      "envs": [
        "onebox",
        "prod",
        "qa",
        "dev"
      ],
      "vars": [
        {
          "description": "Kubernetes container name in a pod",
          "flag": {
            "short": "C",
            "long": "container"
          },
          "name": "container",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        },
        {
          "description": "Exec command. [Default: '/bin/sh']",
          "flag": {
            "short": "c",
            "long": "cmd"
          },
          "name": "cmd",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        },
        {
          "description": "Exec command arguments. [Format: 'arg; arg; arg']",
          "flag": {
            "short": "a",
            "long": "argv"
          },
          "name": "argv",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": false
        }
      ],
      "states": [
        "OK",
        "CRITICAL",
        "UNKNOWN"
      ]
    },
    {
      "description": "This is used to check certificate expire date",
      "examples": "hyperalert check_certificate_expiry",
      "name": "certificate_expiry",
      "envs": [
        "onebox",
        "prod",
        "qa",
        "dev"
      ],
      "vars": [
        {
          "description": "Warning level value (usage duration defaults to 360h)",
          "flag": {
            "short": "w",
            "long": "warning"
          },
          "name": "warning",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        },
        {
          "description": "Critical level value (usage duration defaults to 120h)",
          "flag": {
            "short": "c",
            "long": "critical"
          },
          "name": "critical",
          "type": "STRING",
          "parameterized": false,
          "visibility": true,
          "optional": true
        }
      ],
      "states": [
        "OK",
        "WARNING",
        "CRITICAL",
        "UNKNOWN"
      ]
    },
    {
      "description": "This is used to test various stuff",
      "name": "hello_icinga",
      "envs": [
        "onebox",
        "prod",
        "qa",
        "dev"
      ]
    },
    {
      "description": "The [check_dig](https://www.monitoring-plugins.org/doc/man/check_dig.html) plugin test the DNS service on the specified host using dig.",
      "examples": "check_dig -H DNSSERVER -l www.example.com -A \"+tcp\"\n This will send a tcp query to DNSSERVER for www.example.com",
      "name": "dig",
      "public": false,
      "envs": [
        "qa",
        "dev"
      ],
      "vars": [
        {
          "description": "The DNS server to query. Defaults to \"127.0.0.1\".",
          "name": "dig_server",
          "optional": true
        },
        {
          "description": "Port number (default: 53).",
          "flag": {
            "long": "port",
            "short": "p"
          },
          "name": "dig_port",
          "optional": true,
          "type": "INTEGER"
        },
        {
          "description": "Required The address that should be looked up.",
          "name": "dig_lookup",
          "optional": false
        },
        {
          "description": "Record type to lookup (default: A).",
          "flag": {
            "long": "record_type",
            "short": "T"
          },
          "name": "dig_record_type",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "An address expected to be in the answer section. If not set, uses whatever was in -l.",
          "flag": {
            "long": "expected_address",
            "short": "a"
          },
          "name": "dig_expected_address",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Pass STRING as argument(s) to dig.",
          "flag": {
            "long": "dig-arguments",
            "short": "A"
          },
          "name": "dig_arguments",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Number of retries passed to dig, timeout is divided by this value (Default: 3).",
          "name": "dig_retries",
          "optional": true
        },
        {
          "description": "Response time to result in warning status (seconds).",
          "flag": {
            "long": "warning",
            "short": "w"
          },
          "name": "dig_warning",
          "optional": true,
          "type": "DOUBLE"
        },
        {
          "description": "Response time to result in critical status (seconds).",
          "flag": {
            "long": "critical",
            "short": "c"
          },
          "name": "dig_critical",
          "optional": true,
          "type": "DOUBLE"
        },
        {
          "description": "Seconds before connection times out (default: 10).",
          "flag": {
            "long": "timeout",
            "short": "t"
          },
          "name": "dig_timeout",
          "optional": true,
          "type": "INTEGER"
        },
        {
          "description": "Force dig to only use IPv4 query transport. Defaults to false.",
          "name": "dig_ipv4",
          "optional": true
        },
        {
          "description": "Force dig to only use IPv6 query transport. Defaults to false.",
          "name": "dig_ipv6",
          "optional": true
        }
      ]
    },
    {
      "description": "The [check_dns](https://www.monitoring-plugins.org/doc/man/check_dns.html) plugin uses the nslookup program to obtain the IP address for the given host/domain query. An optional DNS server to use may be specified. If no DNS server is specified, the default server(s) specified in `/etc/resolv.conf` will be used.",
      "name": "dns",
      "public": false,
      "envs": [
        "qa",
        "dev"
      ],
      "vars": [
        {
          "description": "The hostname or IP to query the DNS for. Defaults to \"$host_name$\".",
          "name": "dns_lookup",
          "optional": true
        },
        {
          "description": "The DNS server to query. Defaults to the server configured in the OS.",
          "flag": {
            "long": "server",
            "short": "s"
          },
          "name": "dns_server",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "The answer to look for. A hostname must end with a dot. Deprecated in 2.3",
          "name": "dns_expected_answer",
          "optional": true
        },
        {
          "description": "The answer(s) to look for. A hostname must end with a dot. Multiple answers must be defined as array.",
          "name": "dns_expected_answers",
          "optional": true
        },
        {
          "description": "Expect the server to send an authoritative answer.",
          "name": "dns_authoritative",
          "optional": true
        },
        {
          "description": "Return warning if elapsed time exceeds value.",
          "name": "dns_wtime",
          "optional": true
        },
        {
          "description": "Return critical if elapsed time exceeds value.",
          "name": "dns_ctime",
          "optional": true
        },
        {
          "description": "Seconds before connection times out. Defaults to 10.",
          "flag": {
            "long": "timeout",
            "short": "t"
          },
          "name": "dns_timeout",
          "optional": true,
          "type": "INTEGER"
        }
      ]
    },
    {
      "description": "The [check_dummy](https://www.monitoring-plugins.org/doc/man/check_dummy.html) plugin will simply return the state corresponding to the numeric value of the `dummy_state` argument with optional text.",
      "name": "dummy",
      "envs": [
        "onebox",
        "prod",
        "qa",
        "dev"
      ],
      "vars": [
        {
          "description": "The state. Can be one of 0 (ok), 1 (warning), 2 (critical) and 3 (unknown). Defaults to 0.",
          "name": "dummy_state",
          "optional": true
        },
        {
          "description": "Plugin output. Defaults to \"Check was successful.\".",
          "name": "dummy_text",
          "optional": true
        }
      ]
    },
    {
      "description": "The [check_icmp](https://www.monitoring-plugins.org/doc/man/check_icmp.html) plugin check_icmp allows for checking multiple hosts at once compared to `check_ping`. The main difference is that check_ping executes the system's ping(1) command and parses its output while check_icmp talks ICMP itself. check_icmp must be installed setuid root.",
      "name": "icmp",
      "public": false,
      "envs": [
        "qa",
        "dev"
      ],
      "vars": [
        {
          "description": "The host's address. This can either be a single address or an array of addresses. Defaults to \"$address$\".",
          "name": "icmp_address",
          "optional": true
        },
        {
          "description": "The RTA warning threshold in milliseconds. Defaults to 100.",
          "name": "icmp_wrta",
          "optional": true
        },
        {
          "description": "The packet loss warning threshold in %. Defaults to 5.",
          "name": "icmp_wpl",
          "optional": true
        },
        {
          "description": "The RTA critical threshold in milliseconds. Defaults to 200.",
          "name": "icmp_crta",
          "optional": true
        },
        {
          "description": "The packet loss critical threshold in %. Defaults to 15.",
          "name": "icmp_cpl",
          "optional": true
        },
        {
          "description": "The source IP address to send packets from.",
          "name": "icmp_source",
          "optional": true
        },
        {
          "description": "The number of packets to send. Defaults to 5.",
          "name": "icmp_packets",
          "optional": true
        },
        {
          "description": "The maximum packet interval. Defaults to 80 (milliseconds).",
          "name": "icmp_packet_interval",
          "optional": true
        },
        {
          "description": "The maximum target interval.",
          "name": "icmp_target_interval",
          "optional": true
        },
        {
          "description": "The number of hosts which have to be alive for the check to succeed.",
          "name": "icmp_hosts_alive",
          "optional": true
        },
        {
          "description": "Payload size for each ICMP request. Defaults to 8.",
          "name": "icmp_data_bytes",
          "optional": true
        },
        {
          "description": "The plugin timeout in seconds. Defaults to 10 (seconds).",
          "name": "icmp_timeout",
          "optional": true
        }
      ]
    },
    {
      "description": "Modified check_command [http] where user can provide custom http_address",
      "name": "any_http",
      "envs": [
        "onebox",
        "prod",
        "qa",
        "dev"
      ],
      "vars": [
        {
          "description": "The host's address. Default empty",
          "name": "http_address",
          "type": "STRING",
          "optional": true
        },
        {
          "description": "The virtual host that should be sent in the \"Host\" header.",
          "name": "http_vhost",
          "type": "STRING",
          "optional": true
        },
        {
          "description": "The request URI for GET or POST. Defaults to `/`.",
          "name": "http_uri",
          "type": "STRING",
          "optional": true
        },
        {
          "description": "The TCP port. Defaults to 80 when not using SSL, 443 otherwise.",
          "flag": {
            "long": "port",
            "short": "p"
          },
          "name": "http_port",
          "optional": true,
          "type": "INTEGER"
        },
        {
          "description": "Whether to use SSL. Defaults to false.",
          "flag": {
            "long": "ssl",
            "short": "S"
          },
          "name": "http_ssl",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Whether to force TLSv1.",
          "flag": {
            "long": "ssl",
            "short": "S"
          },
          "name": "http_ssl_force_tlsv1",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Whether to force TLSv1.1.",
          "flag": {
            "long": "ssl",
            "short": "S"
          },
          "name": "http_ssl_force_tlsv1_1",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Whether to force TLSv1.2.",
          "flag": {
            "long": "ssl",
            "short": "S"
          },
          "name": "http_ssl_force_tlsv1_2",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Whether to force SSLv2.",
          "flag": {
            "long": "ssl",
            "short": "S"
          },
          "name": "http_ssl_force_sslv2",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Whether to force SSLv3.",
          "flag": {
            "long": "ssl",
            "short": "S"
          },
          "name": "http_ssl_force_sslv3",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Whether to force TLSv1 or higher.",
          "flag": {
            "long": "ssl",
            "short": "S"
          },
          "name": "http_ssl_force_tlsv1_or_higher",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Whether to force TLSv1.1 or higher.",
          "flag": {
            "long": "ssl",
            "short": "S"
          },
          "name": "http_ssl_force_tlsv1_1_or_higher",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Whether to force TLSv1.2 or higher.",
          "flag": {
            "long": "ssl",
            "short": "S"
          },
          "name": "http_ssl_force_tlsv1_2_or_higher",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Whether to force SSLv2 or higher.",
          "flag": {
            "long": "ssl",
            "short": "S"
          },
          "name": "http_ssl_force_sslv2_or_higher",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Whether to force SSLv3 or higher.",
          "flag": {
            "long": "ssl",
            "short": "S"
          },
          "name": "http_ssl_force_sslv3_or_higher",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Whether to use SNI. Defaults to false.",
          "name": "http_sni",
          "optional": true
        },
        {
          "description": "Add 'username:password' authorization pair.",
          "name": "http_auth_pair",
          "optional": true
        },
        {
          "description": "Add 'username:password' authorization pair for proxy.",
          "name": "http_proxy_auth_pair",
          "optional": true
        },
        {
          "description": "Don't download the body, just the headers.",
          "name": "http_ignore_body",
          "optional": true
        },
        {
          "description": "Allow regex to span newline.",
          "name": "http_linespan",
          "optional": true
        },
        {
          "description": "A regular expression which the body must match against. Incompatible with http_ignore_body.",
          "flag": {
            "long": "expect",
            "short": "e"
          },
          "name": "http_expect_body_regex",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "A case-insensitive expression which the body must match against. Incompatible with http_ignore_body.",
          "flag": {
            "long": "eregi",
            "short": "R"
          },
          "name": "http_expect_body_eregi",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Changes behaviour of http_expect_body_regex and http_expect_body_eregi to return CRITICAL if found, OK if not.",
          "name": "http_invertregex",
          "optional": true
        },
        {
          "description": "The warning threshold.",
          "name": "http_warn_time",
          "optional": true
        },
        {
          "description": "The critical threshold.",
          "flag": {
            "long": "critical",
            "short": "c"
          },
          "name": "http_critical_time",
          "optional": true,
          "type": "DOUBLE"
        },
        {
          "description": "Comma-delimited list of strings, at least one of them is expected in the first (status) line of the server response. Default: HTTP/1.",
          "flag": {
            "long": "expect",
            "short": "e"
          },
          "name": "http_expect",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Minimum number of days a certificate has to be valid. This parameter explicitely sets the port to 443 and ignores the URL if passed.",
          "flag": {
            "long": "certificate",
            "short": "C"
          },
          "name": "http_certificate",
          "optional": true,
          "type": "INTEGER"
        },
        {
          "description": "Name of file contains the client certificate (PEM format).",
          "flag": {
            "long": "client-cert",
            "short": "J"
          },
          "name": "http_clientcert",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Name of file contains the private key (PEM format).",
          "flag": {
            "long": "private-key",
            "short": "K"
          },
          "name": "http_privatekey",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "String to expect in the response headers.",
          "flag": {
            "long": "header",
            "short": "k"
          },
          "name": "http_headerstring",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "String to expect in the content.",
          "flag": {
            "long": "string",
            "short": "s"
          },
          "name": "http_string",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "URL encoded http POST data.",
          "flag": {
            "long": "post",
            "short": "P"
          },
          "name": "http_post",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Set http method (for example: HEAD, OPTIONS, TRACE, PUT, DELETE).",
          "flag": {
            "long": "method",
            "short": "j"
          },
          "name": "http_method",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Warn if document is more than seconds old.",
          "flag": {
            "long": "max-age",
            "short": "M"
          },
          "name": "http_maxage",
          "optional": true,
          "type": "INTEGER"
        },
        {
          "description": "Specify Content-Type header when POSTing.",
          "flag": {
            "long": "content-type",
            "short": "T"
          },
          "name": "http_contenttype",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "String to be sent in http header as User Agent.",
          "flag": {
            "long": "useragent",
            "short": "A"
          },
          "name": "http_useragent",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Any other tags to be sent in http header.",
          "flag": {
            "long": "header",
            "short": "k"
          },
          "name": "http_header",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Print additional perfdata. Defaults to false.",
          "name": "http_extendedperfdata",
          "optional": true
        },
        {
          "description": "How to handle redirect pages. Possible values: \"ok\" (default), \"warning\", \"critical\", \"follow\", \"sticky\" (like follow but stick to address), \"stickyport\" (like sticky but also to port)",
          "flag": {
            "long": "onredirect",
            "short": "f"
          },
          "format": "enum",
          "name": "http_onredirect",
          "optional": true,
          "type": "STRING",
          "values": [
            "ok",
            "warning",
            "critical",
            "follow",
            "sticky",
            "stickyport"
          ]
        },
        {
          "description": "Minimum page size required:Maximum page size required.",
          "flag": {
            "long": "pagesize",
            "short": "m"
          },
          "name": "http_pagesize",
          "optional": true,
          "type": "STRING"
        },
        {
          "description": "Seconds before connection times out.",
          "flag": {
            "long": "timeout",
            "short": "t"
          },
          "name": "http_timeout",
          "optional": true,
          "type": "INTEGER"
        },
        {
          "description": "Use IPv4 connection. Defaults to false.",
          "name": "http_ipv4",
          "optional": true
        },
        {
          "description": "Use IPv6 connection. Defaults to false.",
          "name": "http_ipv6",
          "optional": true
        }
      ]
    }
  ]
}
