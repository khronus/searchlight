#!/bin/bash
exec 1> >(logger -s -p daemon.info -t ${PWD##*/})
exec 2> >(logger -s -p daemon.error -t ${PWD##*/})
source /etc/envvars

echo "Starting icinga2..."

envsubst < /scripts/icinga2/ido-pgsql.conf > /etc/icinga2/features-enabled/ido-pgsql.conf

# Keep restarting until sucessfully configures icinga2
if [ ! -f "/scripts/.icinga2" ]; then
	/etc/init.d/icinga2 start

	cn=$(openssl x509 -noout -subject -in /srv/icinga2/pki/icinga.crt | cut -d'=' -f3)
	fqdn=$(hostname --fqdn)

	sed -i -e "s/\/\/const NodeName.*/const NodeName = \"$cn\"/"  /etc/icinga2/constants.conf
	cat >/etc/icinga2/zones.conf <<EOL
/*
 * Endpoint and Zone configuration for a cluster setup.
 */

object Endpoint "$cn" {
  host = "$fqdn"
}

object Zone ZoneName {
  endpoints = [ "$cn" ]
}
EOL

	chown -R icinga:icinga /srv/icinga2/
	chmod 400 /srv/icinga2/pki/icinga.key
	cat >/etc/icinga2/features-available/api.conf <<EOL
/**
 * The API listener is used for distributed monitoring setups.
 */

object ApiListener "api" {
  cert_path = "/srv/icinga2/pki/icinga.crt"
  key_path = "/srv/icinga2/pki/icinga.key"
  ca_path = "/srv/icinga2/pki/ca.crt"

  ticket_salt = TicketSalt
}
EOL
	icinga2 feature enable api
	# icinga2 api setup

	cat >/etc/icinga2/conf.d/api-users.conf <<EOL
/**
 * The APIUser objects are used for authentication against the API.
 */
object ApiUser "$ICINGA_API_USER" {
  password = "$ICINGA_API_PASSWORD"
  // client_cn = ""

  permissions = [ "*" ]
}
EOL

	/etc/init.d/icinga2 restart
	touch /scripts/.icinga2
fi
# just block on something, instead of repeated restarts by runit.
tail -f /scripts/.icinga2

# exec /usr/sbin/icinga2 --no-stack-rlimit -c /etc/icinga2/icinga2.conf
