resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: tahsin/git-pull-resource
    tag: latest

resources:
- name: searchlight
  type: git
  source:
    uri: https://github.com/appscode/searchlight
    branch: master

- name: pull-request
  type: pull-request
  source:
    owner: appscode
    repo: searchlight
    label: ok-to-test
    access_token: ((access_token))

- name: creds
  type: s3
  source:
    bucket: appscode
    access_key_id: ((s3-access-key))
    secret_access_key: ((s3-secret))
    versioned_file: gcs.zip

jobs:
- name: test-searchlight
  plan:
  - get: searchlight
    trigger: true
  - get: creds
    params:
      unpack: true
  - task: test-e2e
    privileged: true
    file: searchlight/hack/concourse/task.yml
    params:
      TOKEN: ((digitaloceanToken))
      DOCKER_USER: ((docker_user))
      DOCKER_PASS: ((docker_pass))
      AWS_KEY_ID: ((aws_key_id))
      AWS_SECRET: ((aws_secret))
      S3_BUCKET_NAME: ((s3_bucket_name))
      GCE_PROJECT_ID: ((gce_project_id))
      GCS_BUCKET_NAME: ((gcs_bucket_name))
      AZURE_ACCOUNT_NAME: ((azure_account_name))
      AZURE_ACCOUNT_KEY: ((azure_account_key))
      AZURE_CONTAINER_NAME: ((azure_container_name))
      OS_AUTH_URL: ((os_auth_url))
      OS_TENANT_ID: ((os_tenant_id))
      OS_TENANT_NAME: ((os_tenaant_name))
      OS_USERNAME: ((os_username))
      OS_PASSWORD: ((os_password))
      OS_REGION_NAME: ((os_region_name))
      SWIFT_CONTAINER_NAME: ((swift_container_name))

- name: test-searchlight-pr
  plan:
  - get: pull-request
    trigger: true
  - put: pull-request
    params: { path: pull-request, status: pending}
  - get: creds
    params:
      unpack: true
  - task: test-e2e
    privileged: true
    file: pull-request/hack/concourse/task.yml
    input_mapping:
      searchlight: pull-request
    params:
      TOKEN: ((digitaloceanToken))
      DOCKER_USER: ((docker_user))
      DOCKER_PASS: ((docker_pass))
      AWS_KEY_ID: ((aws_key_id))
      AWS_SECRET: ((aws_secret))
      S3_BUCKET_NAME: ((s3_bucket_name))
      GCE_PROJECT_ID: ((gce_project_id))
      GCS_BUCKET_NAME: ((gcs_bucket_name))
      AZURE_ACCOUNT_NAME: ((azure_account_name))
      AZURE_ACCOUNT_KEY: ((azure_account_key))
      AZURE_CONTAINER_NAME: ((azure_container_name))
      OS_AUTH_URL: ((os_auth_url))
      OS_TENANT_ID: ((os_tenant_id))
      OS_TENANT_NAME: ((os_tenaant_name))
      OS_USERNAME: ((os_username))
      OS_PASSWORD: ((os_password))
      OS_REGION_NAME: ((os_region_name))
      SWIFT_CONTAINER_NAME: ((swift_container_name))
    on_success:
      put: pull-request
      params: { path: pull-request, status: success}
    on_failure:
      put: pull-request
      params: {path: pull-request, status: failure}
