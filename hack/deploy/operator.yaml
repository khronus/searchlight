apiVersion: v1
kind: Secret
metadata:
  name: searchlight-operator
  namespace: ${SEARCHLIGHT_NAMESPACE}
  labels:
    app: searchlight
data:
  ICINGA_WEB_UI_PASSWORD: Y2hhbmdlaXQ=
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: searchlight-operator
  namespace: ${SEARCHLIGHT_NAMESPACE}
  labels:
    app: searchlight
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: searchlight
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      serviceAccountName: ${SEARCHLIGHT_SERVICE_ACCOUNT}
      imagePullSecrets: [${SEARCHLIGHT_IMAGE_PULL_SECRET}]
      containers:
      - name: operator
        image: ${SEARCHLIGHT_DOCKER_REGISTRY}/searchlight:6.0.0-rc.0
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --v=3
        - --config-dir=/srv
        - --config-secret-name=searchlight-operator
        - --ops-address=:56790
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --enable-analytics=${SEARCHLIGHT_ENABLE_ANALYTICS}
        ports:
        - containerPort: 8443
        - containerPort: 56790
        volumeMounts:
        - mountPath: /srv
          name: data
        - mountPath: /var/serving-cert
          name: serving-cert
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
      - name: icinga
        image: ${SEARCHLIGHT_DOCKER_REGISTRY}/icinga:6.0.0-rc.0-k8s
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5665
        - containerPort: 60006
        env:
        - name: ENABLE_ANALYTICS
          value: "${SEARCHLIGHT_ENABLE_ANALYTICS}"
        livenessProbe:
          httpGet:
            scheme: HTTPS
            port: 5665
            path: /v1/status
            httpHeaders:
              - name: Authorization
                value: "Basic c3RhdHVzdXNlcjpzdGF0dXNwYXNz"
          initialDelaySeconds: 120
          periodSeconds: 30
        volumeMounts:
        - name: data
          mountPath: /srv
      - name: ido
        image: ${SEARCHLIGHT_DOCKER_REGISTRY}/postgres:9.5-alpine
        imagePullPolicy: IfNotPresent
        env:
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: data
        emptyDir: {}
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: searchlight-server-cert
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
---
# kube lacks the service serving cert signer, so provide a manual secret for it
apiVersion: v1
kind: Secret
metadata:
  name: searchlight-server-cert
  namespace: ${SEARCHLIGHT_NAMESPACE}
  labels:
    app: searchlight
type: kubernetes.io/tls
data:
  tls.crt: ${TLS_SERVING_CERT}
  tls.key: ${TLS_SERVING_KEY}
---
# to be able to expose TSB inside the cluster
apiVersion: v1
kind: Service
metadata:
  name: searchlight-operator
  namespace: ${SEARCHLIGHT_NAMESPACE}
  labels:
    app: searchlight
spec:
  ports:
  - name: ui
    port: 80
    targetPort: 60006
  - name: api
    port: 443
    targetPort: 8443
  - name: icinga
    port: 5665
    targetPort: 5665
  - name: ops
    port: 56790
    targetPort: 56790
  selector:
    app: searchlight
---
# register as aggregated server
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1alpha1.admission.monitoring.appscode.com
  labels:
    app: searchlight
spec:
  caBundle: ${SERVICE_SERVING_CERT_CA}
  group: admission.monitoring.appscode.com
  groupPriorityMinimum: 1000
  versionPriority: 15
  service:
    name: searchlight-operator
    namespace: ${SEARCHLIGHT_NAMESPACE}
  version: v1alpha1
---
# register as aggregated server
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1alpha1.incidents.monitoring.appscode.com
  labels:
    app: searchlight
spec:
  caBundle: ${SERVICE_SERVING_CERT_CA}
  group: incidents.monitoring.appscode.com
  groupPriorityMinimum: 1000
  versionPriority: 15
  service:
    name: searchlight-operator
    namespace: ${SEARCHLIGHT_NAMESPACE}
  version: v1alpha1
