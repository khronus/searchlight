apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: searchlight-operator
  labels:
    app: searchlight
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - "*"
- apiGroups:
  - extensions
  resources:
  - thirdpartyresources
  verbs:
  - "*"
- apiGroups:
  - monitoring.appscode.com
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["storage.k8s.io"]
  resources: ["*"]
  verbs: ["get"]
- apiGroups: [""]
  resources:
  - secrets
  - componentstatuses
  - persistentvolumes
  - persistentvolumeclaims
  verbs: ["get", "list"]
- apiGroups: [""]
  resources:
  - pods
  - nodes
  - namespaces
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - events
  verbs: ["create", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: searchlight-operator
  labels:
    app: searchlight
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: searchlight-operator
subjects:
- kind: ServiceAccount
  name: ${SEARCHLIGHT_SERVICE_ACCOUNT}
  namespace: ${SEARCHLIGHT_NAMESPACE}
---
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: searchlight-extension-server-authentication-reader
  namespace: kube-system
  labels:
    app: searchlight
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: ${SEARCHLIGHT_SERVICE_ACCOUNT}
  namespace: ${SEARCHLIGHT_NAMESPACE}
---
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: searchlight-server-auth-delegator
  labels:
    app: searchlight
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: ${SEARCHLIGHT_SERVICE_ACCOUNT}
  namespace: ${SEARCHLIGHT_NAMESPACE}
