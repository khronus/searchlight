apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app: "{{ template "name" . }}"
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: "{{ template "name" . }}"
        release: "{{ .Release.Name }}"
    spec:
      containers:
      - name: operator
        image: {{ .Values.operator.image }}:{{ .Values.operator.tag }}
        imagePullPolicy: '{{ .Values.operator.pullPolicy }}'
        args:
        - run
        - --v=3
        - --config-dir=/srv
        - --config-secret-name={{ template "fullname" . }}
        - --api.address=:8080
        - --web.address=:56790
        ports:
        - name: api
          containerPort: 8080
          protocol: TCP
        - name: web
          containerPort: 56790
          protocol: TCP
        volumeMounts:
        - name: data
          mountPath: /srv
      - name: icinga
        image: {{ .Values.icinga.image }}:{{ .Values.icinga.tag }}
        imagePullPolicy: '{{ .Values.ido.pullPolicy }}'
        ports:
        - name: icinga
          containerPort: 5665
          protocol: TCP
        - name: ui
          containerPort: 60006
          protocol: TCP
        livenessProbe:
          httpGet:
            scheme: webS
            port: 5665
            path: /v1/status
            httpHeaders:
              - name: Authorization
                value: "Basic c3RhdHVzdXNlcjpzdGF0dXNwYXNz"
          initialDelaySeconds: 120
          periodSeconds: 30
        volumeMounts:
        - name: data
          mountPath: /srv
      - name: ido
        image: {{ .Values.ido.image }}:{{ .Values.ido.tag }}
        imagePullPolicy: '{{ .Values.ido.pullPolicy }}'
        env:
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - name: ido
          containerPort: 5432
          protocol: TCP
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: data
        emptyDir: {}
