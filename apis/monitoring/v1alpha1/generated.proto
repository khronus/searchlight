/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/


// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package go.searchlight.dev.icinga_operator.apis.monitoring.v1alpha1;

import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1alpha1";

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=clusteralerts,singular=clusteralert,categories={monitoring,appscode,all}
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="CheckCommand",type="string",JSONPath=".spec.check"
// +kubebuilder:printcolumn:name="Paused",type="boolean",JSONPath=".spec.paused"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
message ClusterAlert {
  // Standard object's metadata.
  // More info: http://releases.k8s.io/release-1.2/docs/devel/api-conventions.md#metadata
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  // Spec is the desired state of the ClusterAlert.
  // More info: http://releases.k8s.io/release-1.2/docs/devel/api-conventions.md#spec-and-status
  optional ClusterAlertSpec spec = 2;

  optional ClusterAlertStatus status = 3;
}

// ClusterAlertList is a collection of ClusterAlert.
message ClusterAlertList {
  // Standard object's metadata.
  // More info: http://releases.k8s.io/release-1.2/docs/devel/api-conventions.md#metadata
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is the list of ClusterAlert.
  repeated ClusterAlert items = 2;
}

// ClusterAlertSpec describes the ClusterAlert the user wishes to create.
message ClusterAlertSpec {
  // Icinga CheckCommand name
  optional string check = 1;

  // How frequently Icinga Service will be checked
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Duration checkInterval = 2;

  // How frequently notifications will be send
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Duration alertInterval = 3;

  // Secret containing notifier credentials
  optional string notifierSecretName = 4;

  // NotifierParams contains information to send notifications for Incident
  // State, UserUid, Method
  repeated Receiver receivers = 5;

  // Vars contains Icinga Service variables to be used in CheckCommand
  map<string, string> vars = 6;

  // Indicates that Check is paused
  // Icinga Services are removed
  optional bool paused = 7;
}

message ClusterAlertStatus {
  // ObservedGeneration is the most recent generation observed for this BackupBatch. It corresponds to the
  // BackupBatch's generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;
}

// +k8s:deepcopy-gen=false
message IcingaCommand {
  optional string name = 1;

  optional PluginVars vars = 2;

  repeated string states = 3;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=incidents,singular=incident,categories={monitoring,appscode,all}
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="LastNotification",type="string",JSONPath=".status.lastNotificationType"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
message Incident {
  // Standard object's metadata.
  // More info: http://releases.k8s.io/release-1.2/docs/devel/api-conventions.md#metadata
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  // Derived information about the incident.
  // +optional
  optional IncidentStatus status = 2;
}

// IncidentList is a collection of Incident.
message IncidentList {
  // Standard object's metadata.
  // More info: http://releases.k8s.io/release-1.2/docs/devel/api-conventions.md#metadata
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is the list of Incident.
  repeated Incident items = 2;
}

message IncidentNotification {
  // incident notification type.
  optional string type = 1;

  // brief output of check command for the incident
  // +optional
  optional string checkOutput = 2;

  // name of user making comment
  // +optional
  optional string author = 3;

  // comment made by user
  // +optional
  optional string comment = 4;

  // The time at which this notification was first recorded. (Time of server receipt is in TypeMeta.)
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time firstTimestamp = 5;

  // The time at which the most recent occurrence of this notification was recorded.
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTimestamp = 6;

  // state of incident, such as Critical, Warning, OK, Unknown
  optional string state = 7;
}

message IncidentStatus {
  // Type of last notification, such as problem, acknowledgement, recovery or custom
  optional string lastNotificationType = 1;

  // Notifications for the incident, such as problem or acknowledgement.
  // +optional
  repeated IncidentNotification notifications = 2;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=nodealerts,singular=nodealert,categories={monitoring,appscode,all}
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="CheckCommand",type="string",JSONPath=".spec.check"
// +kubebuilder:printcolumn:name="Paused",type="boolean",JSONPath=".spec.paused"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
message NodeAlert {
  // Standard object's metadata.
  // More info: http://releases.k8s.io/release-1.2/docs/devel/api-conventions.md#metadata
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  // Spec is the desired state of the NodeAlert.
  // More info: http://releases.k8s.io/release-1.2/docs/devel/api-conventions.md#spec-and-status
  optional NodeAlertSpec spec = 2;

  optional NodeAlertStatus status = 3;
}

// NodeAlertList is a collection of NodeAlert.
message NodeAlertList {
  // Standard object's metadata.
  // More info: http://releases.k8s.io/release-1.2/docs/devel/api-conventions.md#metadata
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is the list of NodeAlert.
  repeated NodeAlert items = 2;
}

// NodeAlertSpec describes the NodeAlert the user wishes to create.
message NodeAlertSpec {
  map<string, string> selector = 1;

  optional string nodeName = 2;

  // Icinga CheckCommand name
  optional string check = 3;

  // How frequently Icinga Service will be checked
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Duration checkInterval = 4;

  // How frequently notifications will be send
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Duration alertInterval = 5;

  // Secret containing notifier credentials
  optional string notifierSecretName = 6;

  // NotifierParams contains information to send notifications for Incident
  // State, UserUid, Method
  repeated Receiver receivers = 7;

  // Vars contains Icinga Service variables to be used in CheckCommand
  map<string, string> vars = 8;

  // Indicates that Check is paused
  // Icinga Services are removed
  optional bool paused = 9;
}

message NodeAlertStatus {
  // ObservedGeneration is the most recent generation observed for this BackupBatch. It corresponds to the
  // BackupBatch's generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;
}

message PluginArguments {
  optional PluginVars vars = 1;

  map<string, string> host = 2;
}

message PluginVarField {
  optional string description = 1;

  optional string type = 2;
}

message PluginVars {
  map<string, PluginVarField> fields = 1;

  repeated string required = 2;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=podalerts,singular=podalert,categories={monitoring,appscode,all}
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="CheckCommand",type="string",JSONPath=".spec.check"
// +kubebuilder:printcolumn:name="Paused",type="boolean",JSONPath=".spec.paused"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
message PodAlert {
  // Standard object's metadata.
  // More info: http://releases.k8s.io/release-1.2/docs/devel/api-conventions.md#metadata
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  // Spec is the desired state of the PodAlert.
  // More info: http://releases.k8s.io/release-1.2/docs/devel/api-conventions.md#spec-and-status
  optional PodAlertSpec spec = 2;

  optional PodAlertStatus status = 3;
}

// PodAlertList is a collection of PodAlert.
message PodAlertList {
  // Standard object's metadata.
  // More info: http://releases.k8s.io/release-1.2/docs/devel/api-conventions.md#metadata
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is the list of PodAlert.
  repeated PodAlert items = 2;
}

// PodAlertSpec describes the PodAlert the user wishes to create.
message PodAlertSpec {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector selector = 1;

  optional string podName = 2;

  // Icinga CheckCommand name
  optional string check = 3;

  // How frequently Icinga Service will be checked
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Duration checkInterval = 4;

  // How frequently notifications will be send
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Duration alertInterval = 5;

  // Secret containing notifier credentials
  optional string notifierSecretName = 6;

  // NotifierParams contains information to send notifications for Incident
  // State, UserUid, Method
  repeated Receiver receivers = 7;

  // Vars contains Icinga Service variables to be used in CheckCommand
  map<string, string> vars = 8;

  // Indicates that Check is paused
  // Icinga Services are removed
  optional bool paused = 9;
}

message PodAlertStatus {
  // ObservedGeneration is the most recent generation observed for this BackupBatch. It corresponds to the
  // BackupBatch's generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;
}

message Receiver {
  // For which state notification will be sent
  optional string state = 1;

  // To whom notification will be sent
  repeated string to = 2;

  // How this notification will be sent
  optional string notifier = 3;
}

// +k8s:deepcopy-gen=false
message Registry {
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=searchlightplugins,singular=searchlightplugin,scope=Cluster,categories={monitoring,appscode,all}
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Command",type="string",JSONPath=".spec.command"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
message SearchlightPlugin {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  // Spec is the desired state of the SearchlightPlugin.
  // More info: http://releases.k8s.io/release-1.2/docs/devel/api-conventions.md#spec-and-status
  optional SearchlightPluginSpec spec = 2;
}

// SearchlightPluginList is a collection of SearchlightPlugin.
message SearchlightPluginList {
  // Standard object's metadata.
  // More info: http://releases.k8s.io/release-1.2/docs/devel/api-conventions.md#metadata
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is the list of SearchlightPlugin.
  repeated SearchlightPlugin items = 2;
}

// SearchlightPluginSpec describes the SearchlightPlugin the user wishes to create.
message SearchlightPluginSpec {
  // Check Command
  optional string command = 1;

  // Webhook provides a reference to the service for this SearchlightPlugin.
  // It must communicate on port 80
  optional WebhookServiceSpec webhook = 2;

  // AlertKinds refers to supports Alert kinds for this plugin
  repeated string alertKinds = 3;

  // Supported arguments for SearchlightPlugin
  optional PluginArguments arguments = 4;

  // Supported Icinga Service State
  repeated string states = 5;
}

message WebhookServiceSpec {
  // Namespace is the namespace of the service
  optional string namespace = 1;

  // Name is the name of the service
  optional string name = 2;
}

