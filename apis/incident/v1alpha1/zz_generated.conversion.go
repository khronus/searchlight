// +build !ignore_autogenerated

/*
Copyright 2018 The Searchlight Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by conversion-gen. Do not edit it manually!

package v1alpha1

import (
	unsafe "unsafe"

	incident "github.com/appscode/searchlight/apis/incident"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(scheme *runtime.Scheme) error {
	return scheme.AddGeneratedConversionFuncs(
		Convert_v1alpha1_Acknowledgement_To_incident_Acknowledgement,
		Convert_incident_Acknowledgement_To_v1alpha1_Acknowledgement,
	)
}

func autoConvert_v1alpha1_Acknowledgement_To_incident_Acknowledgement(in *Acknowledgement, out *incident.Acknowledgement, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.Comment = (*string)(unsafe.Pointer(in.Comment))
	out.SkipNotify = in.SkipNotify
	return nil
}

// Convert_v1alpha1_Acknowledgement_To_incident_Acknowledgement is an autogenerated conversion function.
func Convert_v1alpha1_Acknowledgement_To_incident_Acknowledgement(in *Acknowledgement, out *incident.Acknowledgement, s conversion.Scope) error {
	return autoConvert_v1alpha1_Acknowledgement_To_incident_Acknowledgement(in, out, s)
}

func autoConvert_incident_Acknowledgement_To_v1alpha1_Acknowledgement(in *incident.Acknowledgement, out *Acknowledgement, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.Comment = (*string)(unsafe.Pointer(in.Comment))
	out.SkipNotify = in.SkipNotify
	return nil
}

// Convert_incident_Acknowledgement_To_v1alpha1_Acknowledgement is an autogenerated conversion function.
func Convert_incident_Acknowledgement_To_v1alpha1_Acknowledgement(in *incident.Acknowledgement, out *Acknowledgement, s conversion.Scope) error {
	return autoConvert_incident_Acknowledgement_To_v1alpha1_Acknowledgement(in, out, s)
}
