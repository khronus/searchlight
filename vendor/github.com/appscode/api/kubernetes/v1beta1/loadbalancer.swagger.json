{
  "basePath": "/",
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "dtypesVoidResponse": {
      "type": "object"
    },
    "v1beta1CreateRequest": {
      "properties": {
        "cluster": {
          "type": "string"
        },
        "load_balancer": {
          "$ref": "#/definitions/v1beta1LoadBalancer"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "raw": {
          "$ref": "#/definitions/v1beta1Raw"
        }
      },
      "type": "object"
    },
    "v1beta1DeleteRequest": {
      "properties": {
        "cluster": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1beta1DescribeRequest": {
      "properties": {
        "cluster": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "raw": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1beta1DescribeResponse": {
      "properties": {
        "load_balancer": {
          "$ref": "#/definitions/v1beta1LoadBalancer"
        },
        "raw": {
          "$ref": "#/definitions/v1beta1Raw"
        }
      },
      "type": "object"
    },
    "v1beta1HTTPLoadBalancerRule": {
      "properties": {
        "backend": {
          "$ref": "#/definitions/v1beta1LoadBalancerBackend"
        },
        "header_rules": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "path": {
          "type": "string"
        },
        "rewrite_rules": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "v1beta1ListRequest": {
      "properties": {
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1beta1ListResponse": {
      "properties": {
        "load_balancers": {
          "items": {
            "$ref": "#/definitions/v1beta1LoadBalancer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "v1beta1LoadBalancer": {
      "properties": {
        "creation_timestamp": {
          "format": "int64",
          "type": "integer"
        },
        "kind": {
          "description": "'kind' defines is it the regular kubernetes instance or the\nappscode superset called Extended Ingress. This field will\nstrictly contains only those two values\n'ingress' - default kubernetes ingress object.\n'extendedIngress' - appscode superset of ingress.\nwhen creating a Loadbalancer from UI this field will always\nbe only 'extendedIngress.' List, Describe, Update and Delete\nwill support both two modes.\nCreate will support only extendedIngress.\nFor Creating or Updating an regular ingress one must use the\nkubectl or direct API calls directly to kubernetes.",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "options": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "spec": {
          "$ref": "#/definitions/v1beta1Spec"
        },
        "status": {
          "$ref": "#/definitions/v1beta1Status"
        }
      },
      "type": "object"
    },
    "v1beta1LoadBalancerBackend": {
      "properties": {
        "service_name": {
          "type": "string"
        },
        "service_port": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1beta1LoadBalancerRule": {
      "properties": {
        "SSL_secret_name": {
          "description": "ssl secret name to enable https on the host.\nssl secret must contain data with the certs pem file.",
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "http": {
          "items": {
            "$ref": "#/definitions/v1beta1HTTPLoadBalancerRule"
          },
          "type": "array"
        },
        "tcp": {
          "items": {
            "$ref": "#/definitions/v1beta1TCPLoadBalancerRule"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "v1beta1LoadBalancerStatus": {
      "properties": {
        "IP": {
          "type": "string"
        },
        "host": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1beta1Raw": {
      "properties": {
        "data": {
          "type": "string"
        },
        "format": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1beta1Spec": {
      "properties": {
        "backend": {
          "$ref": "#/definitions/v1beta1HTTPLoadBalancerRule"
        },
        "rules": {
          "items": {
            "$ref": "#/definitions/v1beta1LoadBalancerRule"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "v1beta1Status": {
      "properties": {
        "status": {
          "items": {
            "$ref": "#/definitions/v1beta1LoadBalancerStatus"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "v1beta1TCPLoadBalancerRule": {
      "properties": {
        "SSL_secret_name": {
          "type": "string"
        },
        "backend": {
          "$ref": "#/definitions/v1beta1LoadBalancerBackend"
        },
        "port": {
          "type": "string"
        },
        "secret_pem_name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1beta1UpdateRequest": {
      "properties": {
        "cluster": {
          "type": "string"
        },
        "load_balancer": {
          "$ref": "#/definitions/v1beta1LoadBalancer"
        },
        "name": {
          "type": "string"
        },
        "raw": {
          "$ref": "#/definitions/v1beta1Raw"
        }
      },
      "type": "object"
    }
  },
  "host": "api.appscode.com",
  "info": {
    "title": "loadbalancer.proto",
    "version": "1beta1"
  },
  "paths": {
    "/_appscode/api/kubernetes/v1beta1/clusters/{cluster}/loadbalancers/json": {
      "get": {
        "operationId": "List",
        "parameters": [
          {
            "in": "path",
            "name": "cluster",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "namespace",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1beta1ListResponse"
            }
          }
        },
        "tags": [
          "LoadBalancers"
        ]
      },
      "post": {
        "operationId": "Create",
        "parameters": [
          {
            "in": "path",
            "name": "cluster",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1CreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/dtypesVoidResponse"
            }
          }
        },
        "tags": [
          "LoadBalancers"
        ]
      }
    },
    "/_appscode/api/kubernetes/v1beta1/clusters/{cluster}/loadbalancers/{name}/json": {
      "delete": {
        "operationId": "Delete",
        "parameters": [
          {
            "in": "path",
            "name": "cluster",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/dtypesVoidResponse"
            }
          }
        },
        "tags": [
          "LoadBalancers"
        ]
      },
      "get": {
        "operationId": "Describe",
        "parameters": [
          {
            "in": "path",
            "name": "cluster",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "kind",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "namespace",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "raw",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1beta1DescribeResponse"
            }
          }
        },
        "tags": [
          "LoadBalancers"
        ]
      },
      "put": {
        "operationId": "Update",
        "parameters": [
          {
            "in": "path",
            "name": "cluster",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1UpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/dtypesVoidResponse"
            }
          }
        },
        "tags": [
          "LoadBalancers"
        ]
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0"
}